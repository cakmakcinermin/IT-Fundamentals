# -*- coding: utf-8 -*-
"""Untitled13.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lJd7dNtNmwW2j8JFJIXJTiLNFtlobIBy
"""

def say_hello(name):
  print(f'Hello {name}')

say_hello('Aly')

def add_2(n):
  return n + 2

add_2(4)

def add_squares(n1, n2):
  print(n1**2 + n2**2)

add_squares(3, 7)

def multiply(a, b):
  print(a * b)

multiply(3, 5)
multiply(-1, 2.5)
multiply('amazing ', int('3'))

def motto():
  print('You successfully started reinventing yourself!')

motto()

def add():
  x = float(input('Please enter first number: '))
  y = float(input('Please enter second number: '))
  return x + y

add()

a = [1, 2]
sum(a)

import itertools
school = ['C', 'l', 'a', 'r', 'u', 's', 'y']
motto = ['reinvent', 'yourself', 'with', 'determination!']
'  '.join(school)
list(itertools.chain(school, motto))

ls1 = list(range(5))

import math
ls1 = list(range(5))
math.fsum(ls1)

def calculator(x, y, o):
  if o == '+':
    if type(x) or type(y) != 'int':
      print(f'incorrect input: "{x} or {y}"')
    else:
        print(x + y)
  elif o == '-':
    if type(x) or type(y) != 'int':
      print(f'incorrect input: "{x} or {y}"')
    else:
      print(x - y)
  elif o == '*':
    if type(x) != 'int' or type(y) != 'int':
      print(f'incorrect input: "{x} or {y}"')
    else:
      print(x * y)
  elif o == '/':
    if type(x) or type(y) != 'int':
      print(f'incorrect input: "{x} or {y}"')
    else:
      print(x / y)
  else:
    print(f'incorrect input: "{o}"')

calculator("z", 2, '+')

def calculator(x, y, o):

  if type(x) != int or type(y) != int:
      print(f'incorrect input: "{x} or {y}"')
  else:
    if o == '+':
      print(x + y)
    elif o == '-':
      print(x - y)
    elif o == '*':
      print(x * y)
    elif o == '/':
      print(x / y)
    else:
      print(f'incorrect input: "{o}"')

calculator(3, 2, '+')

add()

x = 3 + add()

x

def check():
  print('this is a boolean True function')
  return True

check()

shadow_var = print('It can\'t be assigned to any variable!') # None
print(shadow_var)

def add_3(n):
  return n + 3
func_var = add_3(7)
print(func_var + 3)

def absolute_value(n):
  if n >= 0:
    return n
  else:
    return -1 * n

absolute_value(3.3)



absolute_value(-4)

def who(first, last):
  print(f'hello {first} {last}!')


who('Aly', 'Hassan')

who(first='Ali', last='Hassan')

f_name = 'Adam'
l_name = 'Smith'

who(f_name, l_name)

who(first=f_name, last=l_name) # first = f_name = 'Adam. last = l_name = 'Smith

x = 3
y = 6
z = x
a = y

who('Joe',)

a = 'i'
b = 'love'
c = 'you'

d = 'my'
e = 'name'
f = 'is Neo'
# My name is Neo

def texter(x, y, z): 
    print(y, z, x)
    print(f'My text says: {y} {z} {x}')
    
    #     'i'   'love'  'you'
    #     a       b       c

    #    'my', 'name', 'is Neo'
    #     d       e       f


texter(c, a, b) # texter(x=c, y=a, z=b)
texter(f, d, e) # texter(x=f, y=d, z=e)

who(first='Guido', last='van Rossum')

texter(x ='blue', y='I', z='like')

texter( y=a, x=c, z=b)

texter(z=b, y=a, x=c)

def parrot(voltage, state='a stiff', action='voom', type='Norwegian Blue'):
        print("-- This parrot wouldn't", action, end=' ')
        print("if you put", voltage, "volts through it.")
        print("-- Lovely plumage, the", type)
        print("-- It's", state, "!")

# parrot(1000)                                          # 1 positional argument

parrot(voltage=1000)                                  # 1 keyword argument

# parrot(voltage=1000000, action='VOOOOOM')             # 2 keyword arguments

# parrot(action='VOOOOOM', voltage=1000000)             # 2 keyword arguments 

# parrot('a million', 'bereft of life', 'jump')         # 3 positional arguments

# parrot('a thousand', state='pushing up the daisies')  # 1 positional, 1 keyword

def pass_func(a):
  pass

pass_func(0, a=0)

def fruiterer(*fruit) :
    print('I want to get :')
    for i in fruit :
        print('-', i)
        
fruiterer('orange', 'banana', 'melon', 'ananas')

def slicer(*args):
  even = []
  odd = []
  for i in args:
    if i % 2 == 0:
      even.append(i)
    else:
      odd.append(i)
  print('even numbers are:', even)
  print('odd numbers are:', odd)

slicer(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,)

slicer(*range(20))

list(range(10))

a = 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,

type(a)

def slicer2(*args):
  for i in args:
    print(i)
  print(type(args))

slicer2((1,2,3), 4, [5,6,7])

# ls1 = [1, 2, 2, 1, 3, 3]
#   var1 = ''
#   var2 = ''
#   for i in

def advanced_sort(lis):
  dic={}
  for i in lis:
    if i not in dic:
      dic[i] = [i]
    else:
      dic[i].append(i)
  return(list(dic.values()))
advanced_sort([5, 4, 5, 5, 4, 3])

{5: [5,5,5], 4: [4,4], 3: [3] }

a = [1,2,3]
a.append(4)